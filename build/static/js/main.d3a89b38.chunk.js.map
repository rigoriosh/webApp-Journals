{"version":3,"sources":["types/types.js","firebase/firebaseConfig.js","actions/uiActions.js","helpers/loadNotes.js","helpers/subirArchivo.js","actions/notesActions.js","actions/auth.js","hooks/useForm.js","components/note/NotesAppBar.js","components/note/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRout.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","JournalApp.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","dbFirebase","firestore","googleAuthProvider","auth","GoogleAuthProvider","setErrorAction","err","type","payload","msgError","removeErrorAction","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","subirArchivo","archivo","formDate","FormData","urlImagen","append","fetch","method","body","resp","ok","json","apiResp","secure_url","activarNota","nota","actualizarNotaSideBar","newNote","setNotesInStore","startSaveNote","note","dispath","getState","authReducer","noteToFireStore","url","doc","update","refreshNote","Swal","fire","title","deleteNote","idNote","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","UserCredential","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","fields","setfields","target","name","value","NotesAppBar","useDispatch","noteActive","useSelector","state","notesReducer","className","moment","format","style","display","onChange","file","files","text","allowOutsideClick","onBeforeOpen","showLoading","allowEnterKey","close","onClick","document","querySelector","click","NoteScreen","handledInputChange","resetFields","activeId","useRef","useEffect","current","placeholder","cols","rows","src","alt","delete","NothingSelected","JournalEntry","date","backgroundSize","backgroundImage","JournalEntries","map","i","Sidebar","signOut","console","log","Date","getTime","add","docRef","JournalScreen","LoginScreen","uiReducer","loading","isFormValid","validator","isEmail","onSubmit","preventDefault","disabled","signInWithPopup","userCard","to","RegisterScreen","confirmPassword","trim","length","createUserWithEmailAndPassword","userCrednctial","updateProfile","startRegisterWithEmailAndPassword","AuthRouter","exact","path","component","PrivateRoute","isUserLoggedIn","Component","rest","props","PublicRout","AppRouter","banderaLogin","setBanderaLogin","setIsUserLoggedIn","onAuthStateChanged","imageUrl","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3a89b38.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew : '[Notes] New note',\r\n    notesActive : '[Notes] Set active note',\r\n    notesLoad : '[Notes] Load notes',\r\n    notesUpDated : '[Notes] Updated notes',\r\n    notesFileUrl : '[Notes] Update Image Url',\r\n    notesDelete : '[Notes] Delete Notes',\r\n    notesLogOutCleaning : '[Notes] LogOut Cleaning',\r\n    updateNoteById: '[Notes] update Note By Id'\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n const firebaseConfig = {\r\n    apiKey: \"AIzaSyB-0ruod17xh_JYQfd404oBI9E1IwKrSD4\",\r\n    authDomain: \"react-app-cursos-ce166.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-ce166\",\r\n    storageBucket: \"react-app-cursos-ce166.appspot.com\",\r\n    messagingSenderId: \"212073659783\",\r\n    appId: \"1:212073659783:web:335e8f7b8bb3d7a051e722\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const dbFirebase = firebase.firestore();\r\n\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { dbFirebase, googleAuthProvider, firebase}","import { types } from \"../types/types\";\r\n\r\nexport const setErrorAction = (err) => (\r\n    {\r\n        type: types.uiSetError,\r\n        payload: {\r\n            msgError: err\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeErrorAction = () => (\r\n    {\r\n        type: types.uiRemoveError\r\n    }\r\n)\r\n\r\nexport const startLoading = () => (\r\n    {\r\n        type: types.uiStartLoading\r\n    }\r\n)\r\nexport const finishLoading = () => (\r\n    {\r\n        type: types.uiFinishLoading\r\n    }\r\n)\r\n","import { dbFirebase } from \"../firebase/firebaseConfig\"\r\n\r\n\r\n\r\nexport const loadNotes = async(uid) => {\r\n\r\n    const notesSnap = await dbFirebase.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n    notesSnap.forEach(snapHijo => {\r\n        /* \r\n            //console.log(\r\n                {\r\n                    id: snapHijo.id,\r\n                    ...snapHijo.data()\r\n                }\r\n            );\r\n        */\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });        \r\n    })\r\n    //console.log(notes);\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const subirArchivo = async(archivo) => {\r\n\r\n    const api = 'https://api.cloudinary.com/v1_1/du3ukdjyc/upload'\r\n    const formDate = new FormData();\r\n    let urlImagen = ''\r\n    /* los append son los parametros del header en la peticion */\r\n    formDate.append('upload_preset','react-journal');\r\n    formDate.append('file', archivo)\r\n\r\n    try {\r\n        const resp = await fetch(api,{\r\n            method: 'POST',\r\n            body: formDate\r\n        })\r\n        if (resp.ok) {\r\n            const apiResp = await resp.json();\r\n            urlImagen = apiResp.secure_url;\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n    return urlImagen;\r\n}","import Swal from \"sweetalert2\";\r\nimport { dbFirebase } from \"../firebase/firebaseConfig\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { subirArchivo } from \"../helpers/subirArchivo\";\r\nimport { types } from \"../types/types\";\r\n\r\n/* como es una asyncorona por eso retorna una fun callBack */\r\nexport const startNewNotes = () => {\r\n    return async(dispath, getState) => { /* getState, sirve para leer el store */\r\n        const {uid} = getState().authReducer;\r\n        //console.log(uid);\r\n        const newNote = {\r\n            title:'',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n         const docRef = await dbFirebase.collection(`${uid}/journal/notes`).add(newNote);         \r\n         //console.log(docRef.id)\r\n         dispath(activarNota(docRef.id, newNote));\r\n         dispath(actualizarNotaSideBar(docRef.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activarNota = (id, nota) => {/* el id es el id de la nota en DB, no el UID */\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {id, ...nota} // ...nota es el espret de la nota para q se valla destructurada\r\n    }\r\n}\r\n\r\nexport const actualizarNotaSideBar = (id, newNote) => (\r\n    {\r\n        type: types.notesAddNew,\r\n        payload: {id, ...newNote}\r\n    }\r\n)\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return (dispath) => {\r\n        /* // trae las notas desde la DB de firestore */\r\n        loadNotes(uid).then(notes => {\r\n            dispath(setNotesInStore(notes));\r\n        });\r\n    }\r\n}\r\n\r\nexport const setNotesInStore = (notes) => {\r\n    //console.log(notes)\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const updateNote = (note) => { //actualiza solo la nota activa, mas no el listado de notas\r\n    return {\r\n        type: types.notesUpDated,\r\n        payload: note\r\n    }\r\n}\r\n\r\n/*  \r\n    la forma ({ es para evitarse el return x por lo que es directo, \r\n    se utiliza en este caso para el midleware por q retorrna una funcion en este caso el callback\r\n */\r\nexport const startSaveNote = (note) => {\r\n    /* logica para guarda en firebase */\r\n    return async(dispath, getState) => {\r\n        const {uid} = getState().authReducer;\r\n\r\n        const noteToFireStore = {...note};\r\n        delete noteToFireStore.id;\r\n        if(!noteToFireStore.url) delete noteToFireStore.url\r\n        \r\n        await dbFirebase.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore);\r\n\r\n        /*  Ahora actualiza el registro guardado y que se refleje en la lista del bideSide*/\r\n        dispath(refreshNote(note.id, noteToFireStore));\r\n        Swal.fire('Guardado', note.title, 'success');\r\n    }\r\n}\r\n/*  \r\n    la forma ({ es para evitarse el return x lo q es directo, se utiliza en este caso un bojeto\r\n */\r\nexport const refreshNote = (id, note) => (/* refrescar la nota en el bidesider derecho, pero no actualiza toda la lista, solo el guardado o modificado */\r\n    { \r\n        type: types.updateNoteById, //actualiza solo un registro q coincida con el id\r\n        payload: {\r\n            id,\r\n            note: {\r\n                id,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n/* Inicial el proceso de carga de una imagen, es asincrona por eso retorna un callback ({*/\r\nexport const startUpLoadig = (archivo) => {\r\n    return async(dispath, getState) => { //el dispath es para tener acceso a todas als actiones y el getState es para tener acceso al store        \r\n        const {noteActive} = getState().notesReducer;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading....',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            },\r\n            allowEnterKey: false\r\n        })\r\n        const urlImagen = await subirArchivo(archivo);\r\n        noteActive.url = urlImagen;\r\n        dispath(startSaveNote(noteActive));\r\n        Swal.close();\r\n        //console.log(urlImagen)\r\n    }\r\n}\r\n\r\nexport const startDeleteNote = (idNote) => {\r\n    return async(dispath, getState)=>{ // gracias a redux-thunk se cuenta con el dispatch y el getSate\r\n        const {uid} = getState().authReducer;\r\n        //console.log({uid})\r\n        //console.log({idNote})\r\n        const url = `${uid}/journal/notes/${idNote}`\r\n        await dbFirebase.doc(url).delete();\r\n        dispath(deleteNote(idNote))\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (idNote) => (\r\n    {\r\n        type: types.notesDelete,\r\n        payload: idNote\r\n    }\r\n)\r\n\r\nexport const notesLogOutCleaning = () => (\r\n    {\r\n        type: types.notesLogOutCleaning\r\n    }\r\n)\r\n\r\n","import { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebaseConfig';\r\nimport {startLoading, finishLoading, setErrorAction} from './uiActions'\r\nimport { notesLogOutCleaning } from \"./notesActions\";\r\n\r\n\r\n/* startLoginEmailPassword es la simulación de ejecution de una action asincrona */\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    /* dentro de la action startLoginEmailPassword llama a la action login */\r\n    return (dispatch) => {/* //simula llegada de data un tiempo despues, luego ejecuta la action login por medio\r\n                            del dispatch*/\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(UserCredential => {\r\n                const {user} = UserCredential;\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e =>{\r\n                dispatch(setErrorAction(e.message))\r\n                dispatch(finishLoading());\r\n            });\r\n            \r\n        // sigIn emai pas\r\n        \r\n    }\r\n}\r\n\r\n/* otro middleware para controlar la utenticacion */\r\nexport const startGoogleLogin = () => { \r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( userCard => {\r\n                const {user} = userCard;\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n} \r\n\r\nexport const startRegisterWithEmailAndPassword = (email, password, name) => {\r\n    return (dispath) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async(userCrednctial) => {\r\n                const {user} = userCrednctial;\r\n                await user.updateProfile({displayName: name})\r\n                dispath(login(user.uid, user.displayName))\r\n                //console.log(user);\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n}\r\n\r\n/* Accion login que retorna por defecto un obj con el type de action y el payload que lleva la data,\r\n    esta action sera capturada por un reducer, recordar que todos los reducer escuchan esta action \r\n    pero se descrimina segun el type.\r\n    Las action se ejecutan por medio de los dispach en las vistas*/\r\nexport const login = (uid, displayName) => (\r\n    {\r\n        type: types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n)\r\n\r\n/* action middleware para el logOut */\r\nexport const startLogOut = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut().catch(e => { console.log(e); });\r\n        dispatch(logout());\r\n        dispatch(notesLogOutCleaning());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({type:types.logout});","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState) => {\r\n\r\n    //console.log(initialState)\r\n    \r\n    const [fields, setfields] = useState(initialState)\r\n\r\n    const resetFields = (newFormState = initialState) => {\r\n        setfields(initialState);\r\n    }\r\n\r\n    const handledInputChange = ({target}) => {\r\n        //console.log(target.value)\r\n        setfields(\r\n            {\r\n                ...fields, [target.name]: target.value\r\n            }\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    return [fields, handledInputChange, resetFields]\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUpLoadig } from '../../actions/notesActions';\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {noteActive} = useSelector( state => state.notesReducer );\r\n\r\n    \r\n    const save = () => {\r\n        /* Realiza la logica para guardar en fireBase */\r\n        dispatch(startSaveNote(noteActive));\r\n    }\r\n    \r\n    const cargarImagen = () => {        \r\n        document.querySelector('#idSelectArchvio').click(); //simula que se dió un click en el input tipo file\r\n    }\r\n\r\n    const handleChangeFile = (e) => {\r\n        //console.log(e.target.files)\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUpLoadig(file));\r\n        } else {\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{moment().format(\"MMM Do YY\")}</span>\r\n            {/* Cargar imagen */}\r\n            <input id=\"idSelectArchvio\" type=\"file\" style={{display: 'none'}} onChange={handleChangeFile} name='archivoCargado'/>\r\n            <div>\r\n                <button onClick={cargarImagen} className=\"btn fz-1\">Cargar imagen</button>\r\n                <button onClick={save} className=\"btn fz-1\">Guarda nota</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startDeleteNote, updateNote } from '../../actions/notesActions';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    const {noteActive} = useSelector( state => state.notesReducer );  \r\n    const [fields, handledInputChange, resetFields] = useForm(noteActive);\r\n    const {title, url, /* date,  */body, id} = fields; \r\n    const activeId = useRef(noteActive.id);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        /* logica para reset useForm y poder actualizar el useForm y que no entre en ciclo infinito*/\r\n        if (noteActive.id !== activeId.current) {\r\n            resetFields(noteActive);\r\n            activeId.current = noteActive.id;\r\n        }\r\n    }, [noteActive, resetFields])  \r\n    //console.log(fields)\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateNote(fields));//actualiza solo la nota activa, mas no el listado de notas\r\n    }, [dispatch, fields])\r\n\r\n    const deleteNoteToDB = () => {\r\n        dispatch(startDeleteNote(id));\r\n    }\r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__bounce\">\r\n            <NotesAppBar/>\r\n            <div className=\"notes__content\">\r\n                <input type=\"text\" placeholder=\"Ingresa un titulo para esta nota\" className=\"notes__title-input\"\r\n                    onChange={handledInputChange} name=\"title\" value={title}/>\r\n\r\n                <textarea value={body} onChange={handledInputChange} name=\"body\" id=\"\" cols=\"30\" rows=\"10\" \r\n                    placeholder=\"y la descrición de la nota, y opcional sube una imagen\" className=\"notes__textarea\"/>\r\n                {\r\n                    url &&\r\n                    <div className=\"notes__image\">\r\n                        <img src={url} alt=\"Imagen\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button onClick={deleteNoteToDB} className=\"btn btn-danger\">Eliminar Nota</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"NothingSelected__main-content animate__animated animate__pulse\">\r\n            <p>\r\n                Selecciona una nota\r\n                <br/>\r\n                para realizarle cambios\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activarNota } from '../../actions/notesActions';\r\n\r\nexport const JournalEntry = ({id, title, body, date, url}) => {    \r\n    const dispatch = useDispatch();    \r\n    const clicked = () => {\r\n        const nota = {id, title, body, date, url};\r\n        //console.log(nota)\r\n        dispatch(activarNota(id, nota));\r\n    }\r\n    return (\r\n        <div className=\"journal__entry pointer\" onClick={clicked}>\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{backgroundSize: 'cover', backgroundImage: `url(${url})`}}>\r\n                </div>    \r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-tittle\">{title}</p>\r\n                <p className=\"journal__entry-content\"> {body} </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{moment(date).format('MMMM')}</span>\r\n                <h4>{moment(date).format('D')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const {notes} = useSelector( state => state.notesReducer );\r\n    \r\n    //console.log(notes)\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map((e, i) => (\r\n                    <JournalEntry key={e.id} {...e}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogOut } from '../../actions/auth';\r\nimport { startNewNotes } from '../../actions/notesActions';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const handleLogOut = () => {\r\n        dispatch(startLogOut());\r\n    }\r\n    const {name} = useSelector( state => state.authReducer );   \r\n\r\n    const journalNewEntry = () => {\r\n        dispatch(startNewNotes()); //esta action almacenó la plantilla de una nueva entrada en cloudfireStore\r\n\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon mr-3\"></i>\r\n                    <span> Hola { name}</span>\r\n                </h3>\r\n                <button className=\"btn btn-primary\" onClick={handleLogOut}>Salir</button>\r\n            </div>\r\n            <div className=\"journal__new-entry mb-5\" onClick={journalNewEntry}>\r\n                <i className=\"far fa-calendar-plus fa-1x\"></i>\r\n                <p className=\"mt-5\">Nueva Nota</p>\r\n            </div>\r\n            <JournalEntries/>\r\n        </aside>\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../note/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    const {notes, noteActive} = useSelector( state => state.notesReducer );\r\n    //console.log({notes}, {noteActive})\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__bounce\">\r\n            \r\n            <Sidebar/>\r\n\r\n            <main>\r\n                {\r\n                    (noteActive.id !== '')\r\n                        ?  (<NoteScreen/>)\r\n                        : (<NothingSelected/>)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/uiActions';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    /* Hook 'useDispatch' para trabajar con redux, por medio del dispach se ejecuta una action y \r\n    al mismo tiempo los reducers la escuchan y segun el tipo de action se ejecutara una logica interna en el\r\n    correspondiente reducer. en resumen sirve para hacer dispatch de acciones, osea modificar el store */\r\n    const dispatch = useDispatch();\r\n    const {loading, msgError: mse} = useSelector(state => state.uiReducer); // el hook useSelector se utiliza para leer los reducers q estan en el store    \r\n    const {msgError} = mse;\r\n\r\n    const [fields, handledInputChange] = useForm(\r\n        {\r\n            email:'',\r\n            password: ''\r\n        });\r\n    const {email, password} = fields;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            //ejecuta la action startLoginEmailPassword la cual es un middleware x lo q es asincrona\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (!validator.isEmail(email)) {\r\n            dispatch(setErrorAction('El email no es valido'));\r\n            return false;\r\n        }else if (password === '') {\r\n            dispatch(setErrorAction('El password es required'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeErrorAction());\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn\">\r\n                { msgError && <div className=\"auth__alert-error\">{msgError}</div> }\r\n                <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\" value={email} onChange={handledInputChange}/>\r\n                <input type=\"password\" placeholder=\"password\" name=\"password\" className=\"auth__input\" value={password} onChange={handledInputChange}/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>Login</button>\r\n                \r\n                <div className=\"auth__social-networks\">  {/* Contenedor para logearse con la API del gmail */}\r\n                    <p>Login with social networks </p>\r\n                    <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/auth/register\" className=\"link\">Create new account</Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailAndPassword } from '../../actions/auth';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/uiActions';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n\r\n    const [fields, handledInputChange] = useForm({name:'',email:'',password:'',confirmPassword:''});\r\n    const {name ,email ,password ,confirmPassword } = fields;\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.state)\r\n    //console.log(state);\r\n    const {msgError} = useSelector(state => state.uiReducer.msgError); // el hook useSelector se utiliza para leer los reducers q estan en el store\r\n    //console.log(msgError);\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            //console.log('form ok');\r\n            dispatch(startRegisterWithEmailAndPassword(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(name.trim().length === 0){\r\n            dispatch(setErrorAction('El nombre es requerido'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setErrorAction('El email no es valido'));\r\n            return false;\r\n        } else if(password !== confirmPassword || password.length < 5){\r\n            dispatch(setErrorAction('Las contraseñas deben coincidir y ser mayor a 6 caracteres'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeErrorAction());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__bounce\">\r\n\r\n                { msgError && <div className=\"auth__alert-error\">{msgError}</div> }\r\n                \r\n                <input onChange={handledInputChange} type=\"text\" placeholder=\"Name\" name=\"name\" className=\"auth__input\"/>\r\n                <input onChange={handledInputChange} type=\"password\" placeholder=\"password\" name=\"password\" className=\"auth__input\"/>\r\n                <input onChange={handledInputChange} type=\"password\" placeholder=\"confirm Password\" name=\"confirmPassword\" className=\"auth__input\"/>\r\n                <input onChange={handledInputChange} type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\"/>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\" disabled={false}>Register</button>                \r\n                \r\n                <Link to=\"/auth/login\" className=\"link\">Already Register?</Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                        <Route exact path=\"/auth/register\" component={RegisterScreen}/>                \r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PrivateRoute = ({isUserLoggedIn, component: Component, ...rest}) => {\r\n    //console.log(rest);\r\n    //localStorage.setItem('lastPath', rest.location.pathname+rest.location.search);\r\n    return (\r\n       <Route {...rest}\r\n        component = { (props) => (\r\n            (isUserLoggedIn)\r\n            ? <Component {...props}/>\r\n            : <Redirect to=\"/auth/login\" />\r\n        )}\r\n\r\n\r\n       />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isUserLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PublicRout = ({isUserLoggedIn, component: Component, ...rest}) => {\r\n\r\n    return (\r\n       <Route {...rest}\r\n        component = { (props) => (\r\n            (isUserLoggedIn)\r\n            ? <Redirect to=\"/\" />\r\n            : <Component {...props} />\r\n        )}\r\n\r\n\r\n       />\r\n    )\r\n}\r\n\r\nPublicRout.propTypes = {\r\n    isUserLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\nexport default PublicRout\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch} from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notesActions';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { firebase } from '../firebase/firebaseConfig';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRout from './PublicRout';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [banderaLogin, setBanderaLogin] = useState(true);\r\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n    useEffect(() => {\r\n        /* esta parter pregunta a firebase si hay un usuario logueado, si es asi, atualiza el store */\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            //console.log({user});\r\n            if (user?.uid) {/* si exite el user.uid siginifica q si esta aunticado */\r\n                dispatch(login(user.uid, user.displayName));// actualiza el store\r\n                setIsUserLoggedIn(true); // si el usuario ya esta logueado lo envia directamente al home\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsUserLoggedIn(false); // si el usuario ni esta logueado lo envia directamente al loguin\r\n            }\r\n            setBanderaLogin(false);\r\n        });\r\n    }, [dispatch])\r\n\r\n    if (banderaLogin) {\r\n        return <h1>Pagina de esperando revisar si el usuario esta logueado ....</h1>\r\n        \r\n    }\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRout exact path=\"/auth/login\" isUserLoggedIn={isUserLoggedIn} component={AuthRouter}/>     \r\n                <PrivateRoute exact path=\"/\" isUserLoggedIn={isUserLoggedIn} component={JournalScreen}/>  \r\n                <Redirect to=\"/auth/login\" />                 \r\n            </Switch>\r\n            {/* <Switch>\r\n                <Route path=\"/auth\" component={AuthRouter} />\r\n                <Route exact path=\"/\" component={JournalScreen}/>      \r\n                <Redirect to=\"/auth/login\" />          \r\n            </Switch> */}\r\n        </Router>\r\n    )\r\n}\r\n","\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {}\r\n/* \r\n    {\r\n        uid: 'ejemIdjdjdjdjdjd54554454dfdfhh@ddf',\r\n        name: 'rigo'\r\n    }\r\n */\r\n\r\n/* el reducer siempre debe enviar algo diferente a undefined, en este eje esta devolviendo un obj */\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.login: //estos types son los disparadores\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n        case types.logout:\r\n            return initialState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: ''\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: ''\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    noteActive: {\r\n        id:'',\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 0\r\n    }\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:        \r\n            return {\r\n                ...state,\r\n                noteActive: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            //console.log(state.notes);\r\n            \r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:            \r\n            return {\r\n                ...state,\r\n                notes: action.payload\r\n            }\r\n        case types.notesUpDated:\r\n            return {\r\n                ...state,\r\n                noteActive: action.payload\r\n            }\r\n        case types.updateNoteById:\r\n            return {\r\n                ...state,\r\n                /* recorre todas la notas y si coinciden sus id's, modifica esa nota del array de lo contrario lo mantiene */\r\n                notes: state.notes.map(note => (note.id === action.payload.id) ? action.payload.note : note )\r\n            }\r\n            case types.notesDelete:\r\n                return {\r\n                    ...state,\r\n                    noteActive: initialState.noteActive,\r\n                    notes: state.notes.filter(note => note.id !== action.payload)//devuelve arreglo de notas pero menos la q coincidan los ids\r\n                } \r\n            case types.notesLogOutCleaning:\r\n                return initialState   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    authReducer,\r\n    uiReducer,\r\n    notesReducer\r\n});\r\n\r\n/* Lo siguiente es para habilitar en el navegador los tools Redux; y poder configurar el store */ \r\n/* el composeEnhacers es para implentar varios middlewares en este caso estan el de las devtools redux y  */\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))//middleware empleando thunk para acciones asincronas\r\n);","import { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\n\nfunction JournalApp() {\n  return (\n    <Provider store={store}>\n      <AppRouter/>\n    </Provider>  \n\n  )\n}\n\nexport default JournalApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\n\nimport './styles/styles.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <JournalApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}